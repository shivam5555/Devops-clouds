pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "sanjishiva5/flask-calculator:latest"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'ci-cd-jenkins-docker-python', url: 'https://github.com/shivam5555/Devops-Clouds.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                echo "üõ†Ô∏è Building Docker Image..."
                docker build -t ${DOCKER_IMAGE} .
                """
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                    sh """
                    echo "üöÄ Pushing Docker Image to Docker Hub..."
                    docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }

        stage('Deploy Container') {
            steps {
                sh """
                echo "üîÑ Stopping and Removing any existing container..."
                docker stop flask-calculator || true
                docker rm flask-calculator || true
                
                echo "üì• Pulling latest Docker Image..."
                docker pull ${DOCKER_IMAGE}

                echo "üöÄ Running Flask Calculator Container..."
                docker run -d -p 5000:5000 --name flask-calculator ${DOCKER_IMAGE}
                
                echo "‚úÖ Deployment Complete. Checking running containers..."
                sleep 5
                docker ps
                """
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment Successful! Application is running on port 5000."
        }
        failure {
            echo "‚ùå Deployment Failed! Check logs for details."
        }
    }
}

