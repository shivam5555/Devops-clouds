pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "sanjishiva5/flask-calculator:latest"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'ci-cd-jenkins-docker-python', url: 'https://github.com/shivam5555/Devops-Clouds.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh """
                echo "🛠️ Building Docker Image..."
                docker build -t ${DOCKER_IMAGE} .
                """
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                    sh """
                    echo "🚀 Pushing Docker Image to Docker Hub..."
                    docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }
stage('Deploy Container') {
    steps {
        script {
            echo "🔄 Stopping any existing container..."
            sh "sudo docker stop flask-calculator || true"
            sh "sudo docker rm flask-calculator || true"

            echo "📥 Pulling latest Docker Image..."
            sh "sudo docker pull ${DOCKER_IMAGE}"

            echo "🚀 Running Flask Calculator Container..."
            sh """
            sudo docker run -d -p 5000:5000 --name flask-calculator ${DOCKER_IMAGE}
            echo "✅ Checking running containers..."
            sleep 5
            sudo docker ps
            """
        }
    }
}

    }

    post {
        success {
            echo "✅ Deployment Successful! Application is running on port 5000."
        }
        failure {
            echo "❌ Deployment Failed! Check logs for details."
        }
    }
}

